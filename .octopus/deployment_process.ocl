step "install-net-core-6-0" {
    name = "Install .NET Core 6.0"
    properties = {
        Octopus.Action.TargetRoles = "WEBSERVER"
    }

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Script.ScriptBody = "Invoke-WebRequest -Uri \"https://download.visualstudio.microsoft.com/download/pr/321a2352-a7aa-492a-bd0d-491a963de7cc/6d17be7b07b8bc22db898db0ff37a5cc/dotnet-hosting-6.0.14-win.exe\" -OutFile \"dotnet-hosting-6.0.14-win.exe\"; Start-Process \"dotnet-hosting-6.0.14-win.exe\" \"/install /quiet\" -Wait"
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool_variable = ""
    }
}

step "deploy-to-iis" {
    name = "Deploy to IIS"
    properties = {
        Octopus.Action.TargetRoles = "WEBSERVER"
    }

    action {
        action_type = "Octopus.IIS"
        properties = {
            Octopus.Action.EnabledFeatures = "Octopus.Features.IISWebSite,Octopus.Features.JsonConfigurationVariables,Octopus.Features.ConfigurationVariables,Octopus.Features.ConfigurationTransforms"
            Octopus.Action.IISWebSite.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.ApplicationPoolName = "WeatherSite"
            Octopus.Action.IISWebSite.Bindings = "[{\"protocol\":\"http\",\"port\":\"80\",\"host\":\"\",\"thumbprint\":null,\"certificateVariable\":null,\"requireSni\":\"False\",\"enabled\":\"True\"}]"
            Octopus.Action.IISWebSite.CreateOrUpdateWebSite = "True"
            Octopus.Action.IISWebSite.DeploymentType = "webSite"
            Octopus.Action.IISWebSite.EnableAnonymousAuthentication = "True"
            Octopus.Action.IISWebSite.EnableBasicAuthentication = "False"
            Octopus.Action.IISWebSite.EnableWindowsAuthentication = "True"
            Octopus.Action.IISWebSite.ExistingBindings = "Merge"
            Octopus.Action.IISWebSite.StartApplicationPool = "True"
            Octopus.Action.IISWebSite.StartWebSite = "True"
            Octopus.Action.IISWebSite.VirtualDirectory.CreateOrUpdate = "False"
            Octopus.Action.IISWebSite.VirtualDirectory.VirtualPath = "/WeatherApi"
            Octopus.Action.IISWebSite.VirtualDirectory.WebSiteName = "Default Web Site"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolName = "WeatherApi"
            Octopus.Action.IISWebSite.WebApplication.CreateOrUpdate = "False"
            Octopus.Action.IISWebSite.WebApplication.VirtualPath = "/weather"
            Octopus.Action.IISWebSite.WebApplication.WebSiteName = "Default Web Site"
            Octopus.Action.IISWebSite.WebRootType = "packageRoot"
            Octopus.Action.IISWebSite.WebSiteName = "Default Web Site"
            Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles = "True"
            Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings = "True"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appsettings.json"
            Octopus.Action.Package.PackageId = "NStankov.Weather.Api"
            Octopus.Action.WebApplication.WebRootType = "packageRoot"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "NStankov.Weather.Api"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "health-check" {
    name = "Health Check"
    properties = {
        Octopus.Action.TargetRoles = "WEBSERVER"
    }

    action {
        action_type = "Octopus.HealthCheck"
        channels = ["default"]
        properties = {
            Octopus.Action.HealthCheck.ErrorHandling = "TreatExceptionsAsErrors"
            Octopus.Action.HealthCheck.IncludeMachinesInDeployment = "DoNotAlterMachines"
            Octopus.Action.HealthCheck.Type = "FullHealthCheck"
        }
    }
}